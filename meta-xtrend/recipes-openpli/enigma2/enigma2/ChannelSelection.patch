--- a/lib/python/Screens/ChannelSelection.py
+++ b/lib/python/Screens/ChannelSelection.py
@@ -145,7 +145,8 @@
 				"3": self.findCurrentlyPlayed,
 				"5": self.addServiceToBouquetOrAlternative,
 				"6": self.toggleMoveModeSelect,
-				"8": self.removeEntry
+				"8": self.removeEntry,
+				"0": self.reloadServices
 			})
 		menu = []
 
@@ -289,6 +290,7 @@
 					append_when_current_valid(current, menu, (_("Abort alternatives edit"), self.bouquetMarkAbort), level=0)
 
 		menu.append(ChoiceEntryComponent("menu", (_("Configuration"), self.openSetup)))
+		menu.append(ChoiceEntryComponent("0", (_("Reload Services"), self.reloadServices)))
 		self["menu"] = ChoiceList(menu)
 
 	def set3DMode(self, value):
@@ -430,6 +432,11 @@
 	def cancelClick(self, dummy=False):
 		self.close(False)
 
+	def reloadServices(self):
+		eDVBDB.getInstance().reloadBouquets()
+		eDVBDB.getInstance().reloadServicelist()
+		self.session.openWithCallback(self.close, MessageBox, _("The servicelist is reloaded."), MessageBox.TYPE_INFO, timeout = 5)
+
 	def showServiceInformations(self):
 		current = self.csel.getCurrentSelection()
 		if current.flags & eServiceReference.isGroup:
@@ -1893,6 +1900,7 @@
 		self.lastservice = config.tv.lastservice
 		self.lastroot = config.tv.lastroot
 		self.revertMode = None
+		self.control = False
 		config.usage.multibouquet.addNotifier(self.multibouquet_config_changed)
 		self.new_service_played = False
 		self.dopipzap = False
@@ -1917,6 +1925,7 @@
 		self.recallBouquetMode()
 
 	def __evServiceStart(self):
+		name = ""
 		if self.dopipzap and hasattr(self.session, 'pip'):
 			self.servicelist.setPlayableIgnoreService(self.session.pip.getCurrentServiceReference() or eServiceReference())
 		else:
@@ -1925,7 +1934,15 @@
 				info = service.info()
 				if info:
 					refstr = info.getInfoString(iServiceInformation.sServiceref)
-					self.servicelist.setPlayableIgnoreService(eServiceReference(refstr))
+					name = '%s' % ServiceReference(refstr).getServiceName()
+					if "radio" in name or "4097:0:2" in refstr:
+						self.control = True
+						os.system('/usr/bin/showiframe  /usr/share/enigma2/radio.mvi')
+					else:
+						if self.control:
+							os.system('killall -9 showiframe')
+							self.control = False
+					self.servicelist.setPlayableIgnoreService(eServiceReference(refstr))
 
 	def __evServiceEnd(self):
 		self.servicelist.setPlayableIgnoreService(eServiceReference())
